router id <%= @ipaddress_primary %>;

log syslog all;

# Turn on global debugging of all protocols
#debug protocols all;

#
# Filters
#
<% if @protocol == 'ospf' -%>
filter anycast_range {
    if net ~ [ 192.16.71.144/28{32,32}, 199.9.255.176/28{32,32} ] then {
        print "net accepted:", net;
            ospf_metric2 = 20;
        accept;
    }
    reject;
}
<% elsif @protocol == 'bgp' -%>
filter announce_out {
<%# Check if there are multiservice instances and configure the case statement -%>
<%   if ! @instances.empty? -%>
<%     [@instances].flatten.each do |inst| -%>
    if net ~ [ <%= [inst['bgp_announce']].flatten.join(', ') %> ] then {
      # this community should vary based on what service this is running
      bgp_community.add((65505,<%= inst['bgp_community'] %>));<% if inst.key?('name') %> # <%= inst['name'] %><% end %>
      accept;
    }
<%     end -%>
    reject;
}
<%   else -%>
    if net ~ [ <%= @filter_line %> ] then {
      # this community should vary based on what service this is running
      bgp_community.add((65505,<%= @bgp_community %>));
      accept;
    }
    reject;
}
<%   end -%>
<% end -%>

protocol kernel {
    learn;
    persist;        # Don't remove routes on bird shutdown
    scan time 20;   # Scan kernel routing table every 20 seconds
    export none;    # Default is export none
    import all;     # Import all routes
}

protocol device {
    scan time 10;   # Scan interfaces every 10 seconds
    primary "lo" 127.0.0.1;
}

<% if @protocol == 'bgp' -%>
protocol direct {
    interface "lo*";
}
<% end -%>

<% if @protocol == 'bgp' and @routed_subnet -%>
protocol static '<%= @routed_subnet_service %>' {
  route <%= @routed_subnet %> via <%= @ipaddress_primary %>;
}
<% else -%>
protocol static {
}
<% end -%>

<% if @protocol == 'ospf' -%>
protocol ospf myospf {
    import none;
    export none;
    area <%= @ospf_area %> {
<% if @ospf_area != '0.0.0.0' -%>
        stub;
<% end -%>
        interface "<%= @default_gateway_interface %>" {
            priority 0;
        };
        interface "lo*" {
            type ptp;
        };
        <% if @routed_subnet -%>
        stubnet <%= @routed_subnet %>;
        <% end -%>
    };
}
<% elsif @protocol == 'bgp' -%>
template bgp da_switch {
        local as <%= @bgp_asn %>;
        hold time 180;
        source address <%= @ipaddress_primary %>;
        import none;
        export filter announce_out;
}

protocol bgp 'da01' from da_switch {
	neighbor <%= @twitch_bgp_neighbor_da01 %> as <%= @bgp_asn %>;
}

protocol bgp 'da02' from da_switch {
	neighbor <%= @twitch_bgp_neighbor_da02 %> as <%= @bgp_asn %>;
}

<% end -%>


<% if @include_file -%>

include <%= @include_file %>
<% end -%>
